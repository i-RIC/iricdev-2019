version: '{branch}-{build}'

# QT 5.14 is only available with VS2019 on appveyor
image: Visual Studio 2019

environment:
  CL: /MP

# called before clone
init:
  - echo %APPVEYOR_BUILD_WORKER_IMAGE%
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2019" (set GENERATOR="Visual Studio 16 2019"       && set SGEN=vs2019-x64)
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" (set GENERATOR="Visual Studio 15 2017 Win64" && set SGEN=vs2017-x64)
  - echo %GENERATOR%
  - echo %Configuration%
  - if "%Configuration%"=="Debug"   (set config=debug)
  - if "%Configuration%"=="Release" (set config=release)
  - set BUILD_TOOLS=OFF
  - FOR /F "tokens=3 delims= " %%i in ('echo %APPVEYOR_BUILD_WORKER_IMAGE%') do set YEAR=%%i
  - echo %YEAR%
  - set

clone_folder: C:\iricdev

configuration:
  - Debug
  - Release

# Note mkdir is from Git (C:\Program Files\Git\usr\bin\mkdir.exe)
# It might give unexpected results (use md instead)
before_build:
  - call C:\Qt\5.14.2\msvc2017_64\bin\qtenv2.bat
  - if "%SGEN%"=="vs2017-x64"   ( call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat" )
  - if "%SGEN%"=="vs2019-x64"   ( call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat" )
  - cd "%APPVEYOR_BUILD_FOLDER%"
  - copy appveyor_programs.prop programs.prop
  - call versions.cmd
  - set BUILD_TOOLS=OFF
  - curl -L -O https://raw.githubusercontent.com/MestreLion/git-tools/cd87904e0b85d74b1d05f6acbd10553a0ceaceb0/git-restore-mtime
  - python git-restore-mtime
  - if not exist logs (md logs)
  - if not exist downloads (md downloads)
  - where msbuild
  - msbuild -version
  - set
  - ps: Get-ChildItem -Recurse $env:APPVEYOR_BUILD_FOLDER > logs\before-build-files.txt
  - ps: |
      if (Test-Path ".\lib\install" -PathType Container) {
        # remove old versions
        # Remove-Item -Recurse -Force -exclude cgnslib-$env:CGNSLIB_VER      .\lib\install\cgnslib-*
        # Remove-Item -Recurse -Force -exclude expat-$env:EXPAT_VER          .\lib\install\expat-*
        # Remove-Item -Recurse -Force -exclude gdal-$env:GDAL_VER            .\lib\install\gdal-*
        # Remove-Item -Recurse -Force -exclude geos-$env:GEOS_VER            .\lib\install\geos-*
        # Remove-Item -Recurse -Force -exclude hdf5-$env:HDF5_VER            .\lib\install\hdf5-*
        # Remove-Item -Recurse -Force -exclude iriclib-$env:IRICLIB_VER      .\lib\install\iriclib-*
        # Remove-Item -Recurse -Force -exclude netcdf-c-$env:NETCDF_VER      .\lib\install\netcdf-c-*
        # Remove-Item -Recurse -Force -exclude openssl-$env:OPENSSL_VER      .\lib\install\openssl-*
        # Remove-Item -Recurse -Force -exclude proj-$env:PROJ_VER            .\lib\install\proj-*
        # Remove-Item -Recurse -Force -exclude Qwt-$env:QWT_VER              .\lib\install\Qwt-*
        # Remove-Item -Recurse -Force -exclude shapelib-$env:SHAPELIB_VER    .\lib\install\shapelib-*
        # Remove-Item -Recurse -Force -exclude sqlite-src-3320300            .\lib\install\sqlite-src-*
        # Remove-Item -Recurse -Force -exclude tiff-$env:LIBTIFF_VER         .\lib\install\tiff-*
        # Remove-Item -Recurse -Force -exclude udunits-$env:UDUNITS_VER      .\lib\install\udunits-*
        # Remove-Item -Recurse -Force -exclude vtk-$env:VTK_VER              .\lib\install\vtk-*
        # Remove-Item -Recurse -Force -exclude yaml-cpp-$env:YAML_CPP_VER    .\lib\install\yaml-cpp-*
      }

# Since appveyor has time limits (1 hour) we must build in steps
build_script:
  - ps: |
      if (-Not (Test-Path "$env:APPVEYOR_BUILD_FOLDER\lib\install\vtk-$env:VTK_VER\$env:config" -PathType Container)) {
        Write-Output "$env:APPVEYOR_BUILD_FOLDER\lib\install\vtk-$env:VTK_VER\$env:config"
        Get-Command tclsh  # reqd by sqlite
        ##msbuild /nologo /verbosity:minimal /target:vtk-build-$env:config iricdev.proj
      } elseif (-Not (Test-Path "$env:APPVEYOR_BUILD_FOLDER\lib\install\iriclib-$env:IRICLIB_VER\$env:config" -PathType Container)) {
        Write-Output "$env:APPVEYOR_BUILD_FOLDER\lib\install\vtk-$env:VTK_VER\$env:config"
        Get-Command tclsh  # reqd by sqlite
        ##msbuild /nologo /verbosity:minimal /target:iriclib-build-$env:config iricdev.proj
      } else {
        Write-Output "$env:APPVEYOR_BUILD_FOLDER\lib\install\vtk-$env:VTK_VER\$env:config"
        Get-Command tclsh  # reqd by sqlite
        ##msbuild /nologo /verbosity:minimal /target:appveyor-$env:config iricdev.proj
      }

after_build:
  - set
  - ps: Get-ChildItem -Recurse $env:APPVEYOR_BUILD_FOLDER > logs\after-build-files.txt

artifacts:
  - path: lib\install
  - path: logs
  - path: paths.pri
  - path: dirExt.prop

cache:
  - lib\install
  - logs
